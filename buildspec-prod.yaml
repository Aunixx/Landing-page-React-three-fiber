version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - export TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - chmod +x eks-cicd-prod/prereqs.sh
      - bash eks-cicd-prod/prereqs.sh
      #- IMAGE_TAG_SEMANTIC=$(docker run --rm alpine/semver semver -c -i patch $(cat docker-tag.env))"
      #- bash docker-tag-script/increment-tag.sh 
      - IMAGE_TAG_SEMANTIC=$(cat docker-tag.env)
      - IMAGE_TAG_GIT_HASH=$(echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} | cut -c 1-7)
      #- printenv

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region us-west-2 update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo check config
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME      

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build --cache-from $REPOSITORY_URI:$IMAGE_TAG_SEMANTIC-$IMAGE_TAG_GIT_HASH -t $IMAGE_REPO_NAME:$IMAGE_TAG_SEMANTIC-$IMAGE_TAG_GIT_HASH .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG_SEMANTIC-$IMAGE_TAG_GIT_HASH $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG_SEMANTIC-$IMAGE_TAG_GIT_HASH
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG_SEMANTIC-$IMAGE_TAG_GIT_HASH $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - docker images
      - echo Build is completed.

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG_SEMANTIC-$IMAGE_TAG_GIT_HASH
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - echo Push the latest image to cluster
      - kubectl apply -f eks-cicd-prod/nitroleague-website-deployment.yaml
      - kubectl rollout restart -f eks-cicd-prod/nitroleague-website-deployment.yaml
      - aws cloudfront create-invalidation --distribution-id E2FGUJ9KV9MJOT --paths "/*"